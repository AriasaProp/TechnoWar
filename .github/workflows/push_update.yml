name: Push Update

on:
  push:
    paths:
      - 'core/**'
      - 'tools/**'
      - 'tests/**'
      - 'android/**'
      - '.github/workflows/push_update.yml'

jobs:
  format-core:
    runs-on: ubuntu-latest
    outputs:
      android: ${{ steps.changes.outputs.android }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4.1.1

      - name: Filtering
        id: changes
        uses: dorny/paths-filter@v3.0.1
        with:
          list-files: shell
          filters: |
            core:
              - 'core/**'
              - 'tools/**'
              - 'tests/**'
            android:
              - 'android/**'
            src:
              - added|modified: 'core/src/*.c'
              - added|modified: 'core/include/*.h'
              - added|modified: 'tools/src/*.c'
              - added|modified: 'tools/include/*.h'
              - added|modified: 'tests/src/*.c'
              - added|modified: 'tests/include/*.h'
              - added|modified: 'android/backend/*.c'
              - added|modified: 'android/src/main/java/**/*.java'

      - name: Do Changes when needed
        if: steps.changes.outputs.src == 'true'
        run: |
          sudo apt-get install -y clang-format
          echo ${{ steps.changes.outputs.src_files }} | xargs -n 1 clang-format -i
          git config --global user.email "ikomangwidiadaariasa12@gmail.com"
          git config --global user.name "AriasaProp"
          git add .
          if (git commit -m "Reformatting Code Sources"); then
          	git push
          fi

      - name: Run Test
        if: steps.changes.outputs.core == 'true'
        run: |
          cmake -S . -B build
          cmake --build build -t tests
          if [ $? -ne 0 ]; then
            echo "‚ùå Build failed!"
            exit 1
          fi
          ./build/tests
          
#      - name: Upload Artifact
#        uses: actions/upload-artifact@v4.3.3
#        with:
#          name: Image
#          path: ${{ github.workspace }}/core/uiskin_pack.png 


  android:
    runs-on: ubuntu-latest
    needs: format-core
    # if: needs.format-core.outputs.android == 'true'
    steps:
      - name: Checkout
        uses: actions/checkout@v4.1.1

      - name: Set Java 21
        uses: actions/setup-java@v4.2.1
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: 'gradle'

      - name: Setup gradle
        uses: gradle/actions/setup-gradle@v3

      - name: build Android
        run: |
          cd android
          gradle :build

      - name: Upload Artifact
        uses: actions/upload-artifact@v4.3.3
        with:
          name: Android
          path: ${{ github.workspace }}/android/build/outputs/apk/release/android-release.apk 

