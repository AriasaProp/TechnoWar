name: Push Update

on:
  workflow_dispatch:
  push:
    # Ignore pushes that have [skip ci] in the commit message
    branches:
      - '**'
    tags-ignore:
      - '**'
    paths:
      - 'core/**'
      - 'tools/**'
      - 'android/**'
      - '.github/workflows/push_update.yml'

jobs:
  format-core:
    runs-on: ubuntu-latest
    outputs:
      android: ${{ steps.changes.outputs.android }}
      core: ${{ steps.changes.outputs.core }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4.1.1

      - name: Filtering
        id: changes
        uses: dorny/paths-filter@v3.0.1
        with:
          list-files: shell
          filters: |
            core:
              - 'core/**'
              - 'tools/**'
            android:
              - 'android/**'
            src:
              - added|modified: 'core/src/*.c'
              - added|modified: 'core/include/*.h'
              - added|modified: 'tools/src/*.c'
              - added|modified: 'tools/include/*.h'
              - added|modified: 'tools/test_src/*.c'
              - added|modified: 'android/c/*.c'
              - added|modified: 'android/src/main/java/**/*.java'

      - name: Format Source Code
        if: steps.changes.outputs.src == 'true'
        run: |
          sudo apt-get update
          sudo apt-get install -y clang-format
          echo "${{ steps.changes.outputs.src_files }}" | xargs -n 1 clang-format -i
          git config --global user.email "ikomangwidiadaariasa12@gmail.com"
          git config --global user.name "AriasaProp"
          git add .
          # Check if there are changes to commit
          if ! git diff --staged --quiet; then
            echo "Formatting changes detected, committing and pushing."
            # Add [skip ci] to the commit message to prevent workflow loops
            git commit -m "Reformatting Code Sources [skip ci]"
            git push
          else
            echo "No formatting changes needed."
          fi

      - name: Run Test
        if: steps.changes.outputs.core == 'true'
        run: |
          cd tools
          cmake .
          cmake --build .
          ctest -V

  android:
    runs-on: ubuntu-latest
    needs: format-core
    # This job will run if files in 'android/**' or 'core/**' were changed, or if triggered manually.
    if: github.event_name == 'workflow_dispatch' || needs.format-core.outputs.android == 'true' || needs.format-core.outputs.core == 'true'
    steps:
      - name: Checkout
        uses: actions/checkout@v4.1.1

      - name: Set up JDK 21
        uses: actions/setup-java@v4.2.1
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4
        # Caching is disabled. For faster builds, you might want to remove the line below.
        with:
          cache-disabled: true

      - name: Build Android
        run: |
          cd android
          ./gradlew build

      - name: Upload Build Report
        if: always()
        uses: actions/upload-artifact@v4.3.3
        with:
          name: android-build-report
          if-no-files-found: ignore # Don't error if the report doesn't exist
          overwrite: true
          path: ${{ github.workspace }}/android/build/reports/

      - name: Upload APK Artifact
        if: success() # Only upload APK if build succeeds
        uses: actions/upload-artifact@v4.3.3
        with:
          name: Android-APK
          compression-level: 9
          if-no-files-found: error
          overwrite: true
          path: ${{ github.workspace }}/android/build/outputs/apk/**/*.apk